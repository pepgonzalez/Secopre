<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/jee
http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- import del archivo XML con SQL nativo -->
	<import resource="SQL.xml"/>

	<tx:annotation-driven/>

	<!-- escaneado automatico de componentes de tipo @Component , @Repository,  @Service, @Controller -->
	<context:component-scan base-package="ideasw.secopre.service.*, ideasw.secopre.dao.*" />

	<!-- holding properties for database connectivity / -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- data source definition -->
<!-- 	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/dssecopre"/>  -->

	<!-- fuente de datos historico -->	
<!-- 	<jee:jndi-lookup id="tsadbitntstDataSource" jndi-name="jdbc/dstsadbitntst"/>  -->
	
	<!-- data source definition -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- fuente de datos historico -->
	<bean id="tsadbitntstDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.tsadbitntst.driverClassName}" />
		<property name="url" value="${jdbc.tsadbitntst.url}" />
		<property name="username" value="${jdbc.tsadbitntst.username}" />
		<property name="password" value="${jdbc.tsadbitntst.password}" />
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter">
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="persistenceUnitName" value="secoprePU" />
	</bean>

	<bean id="jpaAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="${jpa.database}" p:showSql="false">
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<constructor-arg name="strength" value="10" />
	</bean>

</beans>	